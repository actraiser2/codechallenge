<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.18</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.josemiguel</groupId>
	<artifactId>codechallenge</artifactId>
	<version>1.0.2</version>
	<name>codechallenge</name>
	<description>Demo project</description>
	<properties>
		<java.version>17</java.version>
		<spring-cloud.version>2021.0.9</spring-cloud.version>
		<mapstruct.version>1.5.5.Final</mapstruct.version>        <testcontainers.version>1.18.3</testcontainers.version>
	</properties>
	
	<dependencyManagement>
	    <dependencies>
	        <dependency>
	            <groupId>io.fabric8</groupId>
	            <artifactId>kubernetes-client-project</artifactId>
	            <version>6.4.1</version>
	            <type>pom</type>
	            <scope>import</scope>
	        </dependency>
	        
	        <dependency>
	            <groupId>org.springframework.cloud</groupId>
	            <artifactId>spring-cloud-dependencies</artifactId>
	            <version>${spring-cloud.version}</version>
	            <type>pom</type>
	            <scope>import</scope>
	        </dependency>
	        
	         
	    </dependencies>
	</dependencyManagement>
	
	<repositories>
		<repository>
			<id>confluent</id>
			<name>confluent</name>
			<url>https://packages.confluent.io/maven</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-configuration-processor
	          </artifactId>
	        <optional>true</optional>
		</dependency>
		
		<dependency>
    		<groupId>org.springdoc</groupId>
    		<artifactId>springdoc-openapi-ui</artifactId>
    		<version>1.7.0</version>
		</dependency>
		
		
		<dependency>
    		<groupId>io.micrometer</groupId>
    		<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		
		<dependency>
    		<groupId>com.github.ben-manes.caffeine</groupId>
    		<artifactId>caffeine</artifactId>
		</dependency>
		
		<dependency>
    		<groupId>io.prometheus</groupId>
    		<artifactId>simpleclient_caffeine</artifactId>
		</dependency>
		
		<dependency>
		     <groupId>io.dekorate</groupId>
		     <artifactId>kubernetes-spring-starter</artifactId>
		     <version>3.4.1</version>
		</dependency>
		 
		<dependency>
		     <groupId>org.springframework.boot</groupId>
		     <artifactId>spring-boot-starter-batch</artifactId>
		</dependency>
		
		
		<dependency>
    		<groupId>org.postgresql</groupId>
    		<artifactId>postgresql</artifactId>
		</dependency>
		
		<dependency>
	        <groupId>io.micrometer</groupId>
	        <artifactId>micrometer-registry-prometheus</artifactId>
      
		</dependency>
		
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-amqp</artifactId>
      
		</dependency>
		
		<dependency>
    		<groupId>org.mapstruct</groupId>
    		<artifactId>mapstruct</artifactId>
    		<version>${mapstruct.version}</version>
		</dependency>
		
		<dependency>
    		<groupId>org.testcontainers</groupId>
    		<artifactId>mysql</artifactId>
    		<version>${testcontainers.version}</version>
    		<scope>test</scope>
		</dependency>
		
    	<dependency>
    		<groupId>mysql</groupId>
    		<artifactId>mysql-connector-java</artifactId>
    		<version>8.0.33</version>
		</dependency>
		
		<!--<dependency>
    		<groupId>org.springframework.cloud</groupId>
    		<artifactId>spring-cloud-starter-stream-kafka</artifactId>
		</dependency>-->
		
		
		<dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>
		
		<dependency>
    		<groupId>org.springframework.security</groupId>
    		<artifactId>spring-security-test</artifactId>
            <scope>test</scope>
		</dependency>
		
		<dependency>
    		<groupId>org.apache.avro</groupId>
    		<artifactId>avro</artifactId>
    		<version>1.11.3</version>
		</dependency>
		
		
		<dependency>
			
    		<groupId>io.github.resilience4j</groupId>
    		<artifactId>resilience4j-spring-boot2</artifactId>
		</dependency>
		
		<!--<dependency>
			<groupId>com.santalucia</groupId>
			<artifactId>ams-componentes</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>-->
		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
 
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
	
					<docker>
						<publishRegistry>
							<username>${env.USERNAME}</username>
							<password>${env.PASSWORD}</password>
						</publishRegistry>
					</docker>
					<image>
						<publish>true</publish>
						<name>${env.REGISTRY}/${env.IMAGE}:${project.version}</name>
					</image>
					<jvmArguments>-Dspring.profiles.active=localhost</jvmArguments>
				</configuration>
			</plugin>
			
			<plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-compiler-plugin</artifactId>
	            <configuration>
	          
	                <annotationProcessorPaths>
	                    <path>
	                        <groupId>org.mapstruct</groupId>
	                        <artifactId>mapstruct-processor</artifactId>
	                        <version>${mapstruct.version}</version>
	                    </path>
	                    <path>
                        	<groupId>org.projectlombok</groupId>
                        	<artifactId>lombok</artifactId>
                        	<version>1.18.28</version>
                    	</path>
	                    <path>
    						<groupId>org.projectlombok</groupId>
    						<artifactId>lombok-mapstruct-binding</artifactId>
    						<version>0.2.0</version>
						</path>
	                    <!-- other annotation processors -->
	                </annotationProcessorPaths>
	            </configuration>
	        </plugin>
	        <plugin>
  				<groupId>org.apache.avro</groupId>
  				<artifactId>avro-maven-plugin</artifactId> 
  				<version>1.11.3</version>
				<executions>
				    <execution>
				      <phase>generate-sources</phase>      
				      <goals>
				        <goal>schema</goal>    
				      </goals>
				    </execution>
				 </executions>
				 <configuration>
					 <sourceDirectory>
						 ${project.basedir}/src/main/resources/avro
				     </sourceDirectory>
				     <outputDirectory>
						 ${project.build.directory}/generated-sources/avro
					 </outputDirectory>
					 <includes>
          				<include>**/*.avro</include>
        			</includes>
				 </configuration>
			</plugin>
			
			<plugin>
		        <groupId>com.google.cloud.tools</groupId>
		        <artifactId>jib-maven-plugin</artifactId>
		        <version>3.4.0</version>
		        <configuration>
		          <to>
		            <image>docker.io/actraiser/${project.name}</image>
		            <auth>
						<username>${env.DOCKER_USERNAME}</username>
						<password>${env.DOCKER_PASSWORD}</password>
					</auth>
		          </to>
		        </configuration>
      		</plugin>
      
		</plugins>
	</build>

</project>
