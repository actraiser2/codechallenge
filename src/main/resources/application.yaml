---
app:
  version: "@project.version@"
server:
  error:
    include-message: always
  shutdown: graceful
spring:
  application:
    name: codechallenge
  rabbitmq:
    host: localhost
    username: rabbitmq
    password: fenix000
    port: 5672
  kafkarr:
    bootstrap-servers:
      - 192.168.1.39:9092
    producer:
      value-serializer: io.apicurio.registry.serde.avro.AvroKafkaSerializer
      retries: 2
      acks: 1
    consumer:
      value-deserializer: io.apicurio.registry.serde.avro.AvroKafkaDeserializer
    properties:
      "[schema.registry.url]": http://localhost:8082
      "[apicurio.registry.url]": http://localhost:8083
      "[apicurio.registry.artifact.group-id]": codechallenge
      "[apicurio.registry.artifact.version]": 1
  datasource:
    url: jdbc:h2:file:/tmp/codechallenge;DB_CLOSE_ON_EXIT=FALSE
  h2:
    console:
      enabled: true
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: com.josemiguel.codechallenge.infrastructure.naming.CodechallengeNamingStrategy
  main:
    allow-bean-definition-overriding: false
  cloud:
    stream:
      default-binder: kafka
      bindings:
        accounts-in-0:
          destination: accounts
          group: codechallenge
          #content-type: application/*+avro
          consumer:
            auto-startup: false
            max-attempts: 3
            back-off-initial-interval: 5000
            #use-native-decoding: true
        accounts-out-0:
          destination: accounts
          producer:
            useNativeEncoding: true
  batch:
    jdbc:
      initialize-schema: always
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9090/realms/josemi
resilience4j:
  timelimiter:
    instances:
      createAccount:
        timeout-duration: 4s
      weatherResilience:
        timeout-duration: 10s
  retry:
    instances:
      weatherResilience:
        max-attempts: 3
        wait-duration: 2s

management:
  server:
    port: 8081
  endpoints:
    web:
      base-path: /management
      exposure:
        include:
          - "*"
  endpoint:
    health:
      show-details: always
  health:
    rabbit:
      enabled: false
springdoc:
  swagger-ui:
    path: /openapi/swagger-ui.html
  api-docs:
    path: /openapi/v3/api-docs
logging:
  level:
    "[org.springframework]": info
amqp:
  exchange:
    account-created: account-created.topic
  queue:
    account-created: ${spring.application.name}.queue

santalucia:
  ams:
    cache:
      enabled: true
      expireAfter: 60
weather:
  url: https://api.open-meteo.com/v1
